############################################################################
## Configuration for Iterated Race
############################################################################

## Most of the parameters are commented, which means the default values
## will be used. 

## File that contains the description of the parameters.
parameterFile <- "parameters.txt"

## Directory where the programs will be run.
execDir <- "tuning"

## Log file
# logFile <- "log.txt"

## Folder where tuning instances are located, either absolute or
## relative to working directory.
instanceDir <- "instances"

## File with a list of instances and (optionally) parameters.
## If empty or NULL, does not use a file.
# instanceFile <- ""

## A file containing a list of initial candidates. 
## If empty or NULL, do not use a file.
# candidatesFile <- ""

## The script called for each candidate that
## launches the program to be tuned. See templates/.
# hookRun <- "./hook-run"

## The maximum number of runs (invocations of hookRun) that will performed. It
## determines the (maximum) budget of experiments for the tuning, unless
## timeBudget is positive.
maxExperiments <- 1000

## The maximum computation time that should be used for tuning in
## seconds. This only works when tuning for time. 0 means no time
## limit (use maxExperiments).
# timeBudget <- 0

## An estimation of the average time in seconds required for one
## experiment. Only required if timeBudget is positive.
# timeEstimate <- 0

## Indicates the number of decimal places to be considered for the
## real parameters.
digits <- 5

## A value of 0 silences all debug messages. Higher values provide
## more verbose debug messages.
debugLevel <- 1

## Number of iterations of Race. Do not use something else than the
## default (that is, the dynamic value) unless you know exactly what
## you are doing.
# nbIterations <- 0

## Number of experiments per iteration. Do no use something else than
## the default (that is, the dynamic value) unless you know exactly
## what you are doing.
# nbExperimentsPerIteration <- 1

## Sample the instances or take them always in the same order.
# sampleInstances <- 1

## Specifies the statistical test type: F-test or t-test.
# testType <- "F-test"

## Specifies how many instances are seen before the first test
## is performed.
# firstTest <- 2

## Specifies how many instances are seen between tests.
# eachTest <- 1

## The minimum number of candidates that should survive to continue one
## iteration. Do not use something else than the default (that is, the
## dynamic value) unless you know exactly what you are doing.
# minNbSurvival <- 0

## The number of candidates that should be sampled and evaluated at
## each iteration. Do no use something else than
## the default (that is, the dynamic value) unless you know exactly
## what you are doing.
# nbCandidates  <- 0

## This value is used to determine the number of candidates
## to be sampled and evaluated at each iteration. Use
## the default unless you know exactly what you are doing.
# mu <- 1

## Seed of the random number generator (must be a positive integer, NA
## means use a random seed).
# seed <- NA

## Number of calls to hookRun to execute in parallel. Less than 2
# means calls to hookRun are sequentially executed.
# parallel <- 0

## Enable/disable SGE cluster mode. Use qstat to wait for
## cluster jobs to finish (hookRun must invoke qsub).
# sgeCluster <- 0

## Enable/disable MPI. Use MPI to execute hookRun in parallel
## (parameter parallel is the number of slaves).
# mpi <- 0

## Enable/disable a soft restart strategy to avoid premature convergence 
## of the probabilistic model.
# softRestart <- 1

## END of configuration file
############################################################################
